  Typically you don’t ignore individual Python scripts unless you have a very specific reason. You probably **shouldn’t** ignore them — otherwise, your app source code won't be committed.

---

### ✅ Recommended **cleaned-up version**

```gitignore
# ================= GLOBAL ROOT LEVEL ================= #

# macOS
.DS_Store
# Windows
Thumbs.db

# Node.js / Frontend
node_modules/
.pnp/
.pnp.js
package-lock.json
yarn.lock
pnpm-lock.yaml

# Next.js
.next/
out/
build/

# Production
.vercel/
.turbo/

# Typescript
*.tsbuildinfo
next-env.d.ts

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Environment Variables
.env
.env.*
!.env.example

# Editor directories and files
.vscode/
.idea/
*.suo
*.ntvs*
*.njsproj
*.sln
*.swp

# ================= BACKEND (Python) ================= #

# Python cache
__pycache__/
*.pyc
*.pyo
*.pyd

# Virtual environments
venv/
.venv/
env/
venv311/

# Jupyter
.ipynb_checkpoints/

# Data or output folders
backend/entity_sentiment_results/
*.log

# ================= FRONTEND (Next.js) ================= #

frontend/node_modules/
frontend/.pnp/
frontend/.pnp.*
frontend/.yarn/*
!frontend/.yarn/patches
!frontend/.yarn/plugins
!frontend/.yarn/releases
!frontend/.yarn/versions
frontend/.next/
frontend/out/
frontend/build/
frontend/coverage/
frontend/.vercel/
frontend/*.tsbuildinfo
frontend/next-env.d.ts

# ================= OTHERS ================= #

# Docker
Dockerfile
docker-compose.yml

# Public assets (optional — depending on whether generated)
# public/

# Misc
*.pem
